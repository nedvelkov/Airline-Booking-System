// <auto-generated />
using System;
using ABS_SystemManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ABS_WebAPI.Migrations
{
    [DbContext(typeof(ABS_databaseContext))]
    partial class ABS_databaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ABS_SystemManager.DbModels.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("CHK_Unique_AirlineName");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("CHK_Unique_AirportName");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.AvailableFlights", b =>
                {
                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GetAvailableFlights");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.Flight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.FlightSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlightId")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<short>("SeatClass")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightSection");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.IdColumn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GetIds");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.NameColumn", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GetNames");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.Seat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnName("COLUMN")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("FlightSectionId")
                        .HasColumnType("int");

                    b.Property<short>("Row")
                        .HasColumnName("ROW")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FlightSectionId");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.SeatNumber", b =>
                {
                    b.Property<string>("Column")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Row")
                        .HasColumnType("smallint");

                    b.ToTable("GetSeatNumbers");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.Flight", b =>
                {
                    b.HasOne("ABS_SystemManager.DbModels.Airline", "Airline")
                        .WithMany("Flight")
                        .HasForeignKey("AirlineId")
                        .HasConstraintName("FK_Airline_Name")
                        .IsRequired();

                    b.HasOne("ABS_SystemManager.DbModels.Airport", "Destination")
                        .WithMany("FlightDestination")
                        .HasForeignKey("DestinationId")
                        .HasConstraintName("FK_Airport_Destination")
                        .IsRequired();

                    b.HasOne("ABS_SystemManager.DbModels.Airport", "Origin")
                        .WithMany("FlightOrigin")
                        .HasForeignKey("OriginId")
                        .HasConstraintName("FK_Airport_Origin")
                        .IsRequired();
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.FlightSection", b =>
                {
                    b.HasOne("ABS_SystemManager.DbModels.Flight", "Flight")
                        .WithMany("FlightSection")
                        .HasForeignKey("FlightId")
                        .HasConstraintName("FK_Flight_Id");
                });

            modelBuilder.Entity("ABS_SystemManager.DbModels.Seat", b =>
                {
                    b.HasOne("ABS_SystemManager.DbModels.FlightSection", "FlightSection")
                        .WithMany("Seat")
                        .HasForeignKey("FlightSectionId")
                        .HasConstraintName("FK_FlightSection_Id")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
